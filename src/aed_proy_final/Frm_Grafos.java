package aed_proy_final;
import javax.swing.JOptionPane;
/*@author GRUPO*/
public class Frm_Grafos extends javax.swing.JFrame {
    /*Creates new form Frm_Principal*/
    private GrafoPESO grafo;
    private String[] nombresVertices;
    private Object[][] matrizAdyacencia;
    private int numVertices;
    private Object ultimaAccion;
    private int ultimoVerticeOrigen;
    private String ultimoPesoArista;
    private int ultimoVerticeDestino;
    
    public Frm_Grafos() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNumVer = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtVerOr = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtVerDes = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPeso = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jbtnInicializarGrafo = new javax.swing.JButton();
        jbtnImprimirMatriz = new javax.swing.JButton();
        jbtnAgregarArista = new javax.swing.JButton();
        jbtnEliminarArista = new javax.swing.JButton();
        jbtnLimpiar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Formulario de Grafos");

        jLabel1.setText("Número de Vertices:");

        jLabel2.setText("Vértice Origen:");

        jLabel3.setText("Vértice Destino:");

        jLabel4.setText("Peso de la Arista:");

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        jbtnInicializarGrafo.setText("INICIALIZAR GRAFO");
        jbtnInicializarGrafo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInicializarGrafoActionPerformed(evt);
            }
        });

        jbtnImprimirMatriz.setText("MOSTRAR GRAFO");
        jbtnImprimirMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnImprimirMatrizActionPerformed(evt);
            }
        });

        jbtnAgregarArista.setText("AGREGAR ARISTA");
        jbtnAgregarArista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAgregarAristaActionPerformed(evt);
            }
        });

        jbtnEliminarArista.setText("ELIMINAR ARISTA");
        jbtnEliminarArista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEliminarAristaActionPerformed(evt);
            }
        });

        jbtnLimpiar.setText("LIMPIAR");
        jbtnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLimpiarActionPerformed(evt);
            }
        });

        jButton1.setText("ACTUALIZAR GRAFO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(15, 15, 15)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtVerOr, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNumVer, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtVerDes, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtnImprimirMatriz, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtnInicializarGrafo)
                            .addComponent(jbtnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnEliminarArista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnAgregarArista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNumVer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtVerOr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtVerDes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnInicializarGrafo)
                    .addComponent(jbtnAgregarArista))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnImprimirMatriz)
                    .addComponent(jbtnEliminarArista))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnLimpiar)
                    .addComponent(jButton1))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnInicializarGrafoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInicializarGrafoActionPerformed
        try {
            numVertices = Integer.parseInt(txtNumVer.getText());
            grafo = new GrafoPESO(numVertices);
            nombresVertices = new String[numVertices];
            matrizAdyacencia = new Object[numVertices][numVertices];

            for (int i = 0; i < numVertices; i++) {
                nombresVertices[i] = "Vértice " + (i + 1); // Nombres predeterminados
                for (int j = 0; j < numVertices; j++) {
                    matrizAdyacencia[i][j] = Integer.MAX_VALUE; // Inicializar con valor infinito
                }
            }

            String message = "Grafo Inicializado con " + numVertices + " vértices...!!!";
            JOptionPane.showMessageDialog(null, message);
            txtArea.setText(message);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null,
                    "Por favor, ingrese un número válido de vértices...!!!",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnInicializarGrafoActionPerformed

    private void jbtnAgregarAristaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAgregarAristaActionPerformed
        try {
            int verticeOrigen = Integer.parseInt(txtVerOr.getText());
            int verticeDestino = Integer.parseInt(txtVerDes.getText());
            String pesoAristaStr = txtPeso.getText(); // Obtener el texto del campo de peso
            int pesoArista = Integer.parseInt(pesoAristaStr); // Convertir a entero si es necesario

            // Aquí puedes usar 'pesoAristaStr' directamente en tus mensajes o procesos
            grafo.addArista(verticeOrigen, verticeDestino, pesoArista);

            String message = "Arista agregada: (" + verticeOrigen + " -> " + 
                    verticeDestino + ") con peso " + pesoArista;
            JOptionPane.showMessageDialog(null, message);
            txtArea.setText(message);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null,
                    "Por favor, ingrese valores válidos...!!!",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnAgregarAristaActionPerformed

    private void jbtnEliminarAristaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEliminarAristaActionPerformed
        try {
           int verticeOrigen = Integer.parseInt(txtVerOr.getText()) - 1; // Restar 1 porque el usuario ingresa desde 1
           int verticeDestino = Integer.parseInt(txtVerDes.getText()) - 1; // Restar 1 porque el usuario ingresa desde 1

           if (grafo != null && verticeOrigen >= 0 && verticeOrigen < numVertices &&
                   verticeDestino >= 0 && verticeDestino < numVertices) {

               grafo.deleteArista(verticeOrigen, verticeDestino);
               matrizAdyacencia[verticeOrigen][verticeDestino] = Integer.MAX_VALUE;

               String message = "Arista eliminada: (" + nombresVertices[verticeOrigen] + " -> " +
                       nombresVertices[verticeDestino] + ")";
               JOptionPane.showMessageDialog(null, message);
               txtArea.setText(message);
           } else {
               JOptionPane.showMessageDialog(null,
                       "Vértices fuera de rango o grafo no inicializado...!!!",
                       "Error", JOptionPane.ERROR_MESSAGE);
           }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null,
                    "Por favor, ingrese valores válidos...!!!",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnEliminarAristaActionPerformed

    private void jbtnImprimirMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnImprimirMatrizActionPerformed
        if (grafo != null) {
            String matrizString = "";

            for (int i = 0; i < numVertices; i++) {
                for (int j = 0; j < numVertices; j++) {
                    // Convertir a Integer para la comparación
                    Integer valor = (Integer) matrizAdyacencia[i][j];
                    if (valor == Integer.MAX_VALUE) {
                        matrizString += "---";
                    } else {
                        matrizString += valor;
                    }
                    matrizString += "\t";
                }
                matrizString += "\n";
            }

            // Mostrar la matriz en el área de texto
            txtArea.setText(matrizString);

            // Mostrar mensaje adicional sobre la última acción realizada
            if (ultimaAccion.equals("agregar")) {
                String message = "Última arista agregada: " + nombresVertices[ultimoVerticeOrigen] +
                        " a " + nombresVertices[ultimoVerticeDestino] + " en " + ultimoPesoArista + " segundos.";
                JOptionPane.showMessageDialog(null, message);
            } else if (ultimaAccion.equals("eliminar")) {
                String message = "Última arista eliminada: " + nombresVertices[ultimoVerticeOrigen] +
                        " a " + nombresVertices[ultimoVerticeDestino] + " en " + ultimoPesoArista + " segundos.";
                JOptionPane.showMessageDialog(null, message);
            }

            // Restablecer la última acción después de mostrar el mensaje
            ultimaAccion = "";
            ultimoVerticeOrigen = -1;
            ultimoVerticeDestino = -1;
            ultimoPesoArista = "";

        } else {
            JOptionPane.showMessageDialog(null,
                    "Primero inicialice el grafo...!!!",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnImprimirMatrizActionPerformed

    private void jbtnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLimpiarActionPerformed
        // Limpiar el área de texto
        txtArea.setText("");
        // Limpiar los campos de texto
        txtNumVer.setText("");
        txtVerOr.setText("");
        txtVerDes.setText("");
        txtPeso.setText("");
    }//GEN-LAST:event_jbtnLimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm_Grafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm_Grafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm_Grafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_Grafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_Grafos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnAgregarArista;
    private javax.swing.JButton jbtnEliminarArista;
    private javax.swing.JButton jbtnImprimirMatriz;
    private javax.swing.JButton jbtnInicializarGrafo;
    private javax.swing.JButton jbtnLimpiar;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextField txtNumVer;
    private javax.swing.JTextField txtPeso;
    private javax.swing.JTextField txtVerDes;
    private javax.swing.JTextField txtVerOr;
    // End of variables declaration//GEN-END:variables
}
